// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/dhyaniarun1993/foody-catalog-service/services (interfaces: HealthService)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	errors "github.com/dhyaniarun1993/foody-common/errors"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockHealthService is a mock of HealthService interface
type MockHealthService struct {
	ctrl     *gomock.Controller
	recorder *MockHealthServiceMockRecorder
}

// MockHealthServiceMockRecorder is the mock recorder for MockHealthService
type MockHealthServiceMockRecorder struct {
	mock *MockHealthService
}

// NewMockHealthService creates a new mock instance
func NewMockHealthService(ctrl *gomock.Controller) *MockHealthService {
	mock := &MockHealthService{ctrl: ctrl}
	mock.recorder = &MockHealthServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockHealthService) EXPECT() *MockHealthServiceMockRecorder {
	return m.recorder
}

// HealthCheck mocks base method
func (m *MockHealthService) HealthCheck(arg0 context.Context) errors.AppError {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "HealthCheck", arg0)
	ret0, _ := ret[0].(errors.AppError)
	return ret0
}

// HealthCheck indicates an expected call of HealthCheck
func (mr *MockHealthServiceMockRecorder) HealthCheck(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HealthCheck", reflect.TypeOf((*MockHealthService)(nil).HealthCheck), arg0)
}
